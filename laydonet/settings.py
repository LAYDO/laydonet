"""
Django settings for laydonet project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
import sys
from urllib.parse import urlsplit
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = Path(__file__).resolve().parent.parent
# print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # os.getenv("DEBUG", "False") == "True"

ALLOWED_HOSTS = os.getenv(
    "DJANGO_ALLOWED_HOSTS",
    "127.0.0.1,localhost,*.laydo.net,https://laydonet-yztpa.ondigitalocean.app/,ai.laydo.net,www.ai.laydo.net",
).split(",")

CSRF_TRUSTED_ORIGINS = [
    "https://*.laydo.net",
    "https://laydonet-yztpa.ondigitalocean.app/",
    "https://ai.laydo.net",
    "https://www.ai.laydo.net",
]


# Application definition

INSTALLED_APPS = [
    "daphne",
    "whitenoise.runserver_nostatic",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_quill",
    "webpack_loader",
    "home",
    "wedding",
    "weather",
    "schedule",
    "allergies",
    "trackiss",
    "jwst",
    "mtg",
    "blog",
    "users",
    "orbiter",
    "channels",
    "resume",
    "about",
    "webgl",
    "ai",
    "cookbook",
    "sports",
]

WEBPACK_LOADER = {
    "DEFAULT": {
        "CACHE": not DEBUG,
        "BUNDLE_DIR_NAME": "dist/",  # must end with slash
        "STATS_FILE": os.path.join(BASE_DIR, "webpack-stats.json"),
        "POLL_INTERVAL": 0.1,
        "TIMEOUT": None,  # 0.1
        "IGNORE": [r".+\.hot-update.js", r".+\.map"],
    }
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "laydonet.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["laydonet/templates/", "laydonet/static/"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# WSGI_APPLICATION = 'laydonet.wsgi.application'
# Channels
ASGI_APPLICATION = "laydonet.asgi.application"


DEVELOPMENT_MODE = True  # os.getenv("DEVELOPMENT_MODE", "False") == "True"

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if DEVELOPMENT_MODE is True:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": "laydonetdb",
            "USER": "laydonetdb",
            "PASSWORD": os.environ.get("DB_PASSWORD"),
            "HOST": os.environ.get("DB_HOST"),
            "PORT": "25060",
        }
    }
elif len(sys.argv) > 0 and sys.argv[1] != "collectstatic":
    database_url = os.getenv("DATABASE_URL", None)
    if database_url is None:
        raise Exception("DATABASE_URL environment variable not defined")

    parsed_url = urlsplit(database_url)

    if parsed_url.scheme in ["postgres", "postgresql"]:
        database_engine = "django.db.backends.postgresql"
    elif parsed_url.scheme == "mysql":
        database_engine = "django.db.backends.mysql"
    elif parsed_url.scheme == "sqlite":
        database_engine = "django.db.backends.sqlite3"
    else:
        raise ValueError(f"Unsupported database scheme: {parsed_url.scheme}")

    DATABASES = {
        "default": {
            "ENGINE": database_engine,
            "NAME": parsed_url.path[1:],
            "USER": parsed_url.username,
            "PASSWORD": parsed_url.password,
            "HOST": parsed_url.hostname,
            "PORT": parsed_url.port,
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

if DEVELOPMENT_MODE:
    STATIC_URL = "/static/"
    STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
    STATICFILES_DIRS = [
        BASE_DIR / "static",
        # BASE_DIR / "static/dist",
    ]
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
    MEDIA_ROOT = STATIC_URL + "images/"
else:
    AWS_ACCESS_KEY_ID = os.getenv("DO_SPACES_KEY")
    AWS_SECRET_ACCESS_KEY = os.getenv("DO_SPACES_SECRET")
    AWS_STORAGE_BUCKET_NAME = os.getenv("DO_SPACES_BUCKET_NAME")
    AWS_S3_ENDPOINT_URL = os.getenv("DO_SPACES_ENDPOINT_URL")
    AWS_S3_OBJECT_PARAMETERS = {
        "CacheControl": "max-age=86400",
    }
    AWS_LOCATION = "static"
    AWS_QUERYSTRING_AUTH = False
    AWS_DEFAULT_ACL = "public-read"

    STATIC_URL = "{}/{}/".format(AWS_S3_ENDPOINT_URL, AWS_LOCATION)
    STATICFILES_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
    DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
    MEDIA_ROOT = "{}/laydonet/static/images/".format(AWS_S3_ENDPOINT_URL)
    STATICFILES_DIRS = [
        BASE_DIR / "static",
    ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Login/logout redirect
LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = "home"
